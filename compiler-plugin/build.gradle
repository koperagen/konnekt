/*
* Copyright (C) 2019 The Arrow Authors
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

plugins {
    id "org.jetbrains.kotlin.jvm"
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

repositories {
    mavenCentral()
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
    jcenter()
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION"
    compileOnly "com.intellij:openapi:$OPENAPI_VERSION"
    compileOnly "io.arrow-kt:compiler-plugin:$ARROW_META_VERSION"
    compileOnly "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:$KOTLIN_VERSION"
    compileOnly("org.jetbrains.kotlin:kotlin-script-util:$KOTLIN_VERSION") {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-compiler"
        exclude group: "org.jetbrains.kotlin", module: "kotlin-compiler-embeddable"
    }

    testImplementation("io.arrow-kt:meta-test:1.4.10-SNAPSHOT")
    testImplementation("io.arrow-kt:compiler-plugin:$ARROW_META_VERSION")
    testImplementation("junit:junit:4.13") // only for SampleTest
    testImplementation("io.kotest:kotest-framework-api:4.3.1")
    testImplementation("io.kotest:kotest-runner-junit5-jvm:4.3.1")

    def ktor_version = "1.3.0"

    // Required for integration test of plugin
    testImplementation("io.ktor:ktor-client-mock:$ktor_version")
    testImplementation("io.ktor:ktor-client-mock-jvm:$ktor_version")
    testImplementation("io.arrow-kt:arrow-meta-prelude:1.4.10-SNAPSHOT")
    testImplementation("io.ktor:ktor-client-core:$ktor_version")
    testImplementation("io.ktor:ktor-http:$ktor_version")
    testImplementation("io.ktor:ktor-client-core-jvm:$ktor_version")
    testImplementation("io.ktor:ktor-client-cio:$ktor_version")
    testImplementation("io.ktor:ktor-client-json-jvm:$ktor_version")
    testImplementation("io.ktor:ktor-client-jackson:$ktor_version")
    testImplementation("io.ktor:ktor-client-logging-jvm:$ktor_version")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6")
    testImplementation("org.slf4j:slf4j-simple:1.7.30")
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
        jvmTarget = "$JVM_TARGET_VERSION"
    }
}

shadowJar {
    configurations = [project.configurations.compileOnly]
    relocate 'org.jetbrains.kotlin.com.intellij', 'com.intellij'
    dependencies {
        exclude(dependency('org.jetbrains.kotlin:kotlin-stdlib'))
        // and its transitive dependencies:
        exclude(dependency('org.jetbrains.kotlin:kotlin-stdlib-common'))
        exclude(dependency('org.jetbrains:annotations'))

        exclude(dependency('com.intellij:openapi'))
        // and its transitive dependencies:
        exclude(dependency('com.intellij:extensions'))
        exclude(dependency('com.intellij:annotations'))
    }
}